(()=>{var r={426:(r,n,e)=>{"use strict";e.d(n,{Z:()=>p});var t=e(537),o=e.n(t),a=e(645),i=e.n(a),s=e(667),A=e.n(s),c=new URL(e(843),e.b),d=i()(o());d.push([r.id,"@import url(https://fonts.googleapis.com/css2?family=Mochiy+Pop+One&display=swap);"]);var l=A()(c);d.push([r.id,"html {\r\n    box-sizing: border-box;\r\n  }\r\n  \r\n*, *:before, *:after {\r\n    box-sizing: inherit;\r\n}\r\n  \r\nbody {\r\n    font-family: sans-serif;\r\n    margin: 0;\r\n    background-image: linear-gradient(260deg, #4e88ae 0%, #ca99d3 100%);\r\n}\r\n\r\nh1{\r\n    font-family: 'Mochiy Pop One', sans-serif;\r\n    font-size: 4rem;\r\n    text-align: center;\r\n    color: #fff;\r\n    text-transform: uppercase;\r\n    text-shadow: 5px 5px 6px #0000009e;\r\n}\r\n\r\nh2{\r\n    font-size: 1rem;\r\n    margin: 2rem;\r\n    font-weight: 500;\r\n    font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\r\n}\r\n \r\nbutton{\r\n    color:white;\r\n    font-weight: 100;\r\n    letter-spacing: 2px;\r\n    text-decoration: none;\r\n    background:rgba(0,0,0,0.2);\r\n    padding:20px 35px;\r\n    border: none;\r\n    text-transform: uppercase;\r\n    font-weight: 600;\r\n    transition:all 0.2s;\r\n    cursor: pointer;\r\n    border-top: 3px solid #0000002c;\r\n    border-right: 3px solid #3a3a3a;\r\n    border-bottom: 3px solid #3a3a3a;\r\n    border-left: 3px solid #0000002c;\r\n    border-radius: 1px;\r\n}\r\n\r\nbutton:hover {\r\n    background:rgba(0,0,0,0.3);\r\n    border-top: 4px solid #0000002c;\r\n    border-right: 4px solid #3a3a3a;\r\n    border-bottom: 4px solid #3a3a3a;\r\n    border-left: 4px solid #0000002c;\r\n  }\r\n\r\n\r\n  svg{\r\n    color: #000;\r\n  }\r\n\r\n.overlay{\r\n    background-color: #00000066;\r\n    position: fixed;\r\n    width: 100%;\r\n    height: 100%;\r\n    top: 0;\r\n    bottom: 0;\r\n}\r\n\r\n.start-screen{\r\n    position: fixed;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    background-image: linear-gradient(260deg, #4e88ae 0%, #ca99d3 100%);\r\n    padding: 3rem;\r\n    border-radius: 4px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    box-shadow: 0px 0px 12px #000000a4;\r\n    text-align: center;\r\n}\r\n\r\n.start-screen #setup-board{\r\n    /* margin: 3rem; */\r\n    width: 220px;\r\n    height: 220px;\r\n    \r\n}\r\n\r\n.start-screen .button-container{\r\n    display: flex;\r\n    gap: 2rem;\r\n\r\n}\r\n.start-screen .button-container > button {\r\n    width: 135px;\r\n    padding: .7rem 2rem;\r\n}\r\n\r\n.start-screen .ships{\r\n    align-items: center;\r\n    justify-content: center;\r\n    display: inline-flex;\r\n}\r\n\r\n.ship-part{\r\n    background-color: #ffffffa3;\r\n    padding: 10px;\r\n    border: 1px solid #000000c1;\r\n    width: 10px;\r\n}\r\n\r\n.ship-part-on-board{\r\n    background-color: #ffffffa3 !important; \r\n    border: 1px solid #000000c1 !important;\r\n}\r\n\r\n.ships{\r\n    cursor: grab;\r\n}\r\n\r\n.dragging:active{\r\n    cursor: grabbing\r\n}\r\n\r\n\r\n.container{\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    padding-bottom: 3rem;\r\n } \r\n\r\n\r\n.board-container{\r\n    display: flex;\r\n    width: 100%;\r\n    justify-content: center;\r\n    padding:50px;\r\n    gap: 8rem;\r\n    flex-wrap: wrap;\r\n}\r\n\r\n.board{\r\n    height: 350px;\r\n    width: 350px;\r\n    border: 1px solid #000;\r\n    background-color: rgba(0,0,0,0.2);;\r\n    border-top: 3px solid #0000002c;\r\n    border-right: 3px solid #3a3a3a;\r\n    border-bottom: 3px solid #3a3a3a;\r\n    border-left: 3px solid #0000002c;\r\n    border-radius: 1px;\r\n\r\n    display: grid;\r\n    grid-template-columns: repeat(10, 1fr);\r\n    grid-template-rows: repeat(10, 1fr);\r\n}\r\n\r\n\r\n.created-by{\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n}\r\n\r\n.position{\r\n    background-color: #00000075;\r\n    padding: 10px;\r\n    border: 1px solid #ffffffae;\r\n    width: 100%;\r\n    \r\n}\r\n\r\n#board-cpu .position:hover{\r\n    color: #fff;\r\n    background: url("+l+");\r\n    background-color: #ffffff75;\r\n}\r\n\r\n.position.there-is-ship{\r\n    background-color: rgb(69, 179, 69);\r\n}\r\n\r\n.position.miss{\r\n    background-color: #72727247;\r\n}\r\n\r\n.position.hit{\r\n    background: rgb(194, 37, 37);\r\n    box-shadow:inset 0px 0px 0px 5px rgba(33, 33, 33, 0.792);\r\n    \r\n\r\n}\r\n\r\n.col {\r\n    flex-direction: column;\r\n}\r\n\r\n\r\n.hide {\r\n    display: none;\r\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAEA;IACI,sBAAsB;EACxB;;AAEF;IACI,mBAAmB;AACvB;;AAEA;IACI,uBAAuB;IACvB,SAAS;IACT,mEAAmE;AACvE;;AAEA;IACI,yCAAyC;IACzC,eAAe;IACf,kBAAkB;IAClB,WAAW;IACX,yBAAyB;IACzB,kCAAkC;AACtC;;AAEA;IACI,eAAe;IACf,YAAY;IACZ,gBAAgB;IAChB,qGAAqG;AACzG;;AAEA;IACI,WAAW;IACX,gBAAgB;IAChB,mBAAmB;IACnB,qBAAqB;IACrB,0BAA0B;IAC1B,iBAAiB;IACjB,YAAY;IACZ,yBAAyB;IACzB,gBAAgB;IAChB,mBAAmB;IACnB,eAAe;IACf,+BAA+B;IAC/B,+BAA+B;IAC/B,gCAAgC;IAChC,gCAAgC;IAChC,kBAAkB;AACtB;;AAEA;IACI,0BAA0B;IAC1B,+BAA+B;IAC/B,+BAA+B;IAC/B,gCAAgC;IAChC,gCAAgC;EAClC;;;EAGA;IACE,WAAW;EACb;;AAEF;IACI,2BAA2B;IAC3B,eAAe;IACf,WAAW;IACX,YAAY;IACZ,MAAM;IACN,SAAS;AACb;;AAEA;IACI,eAAe;IACf,QAAQ;IACR,SAAS;IACT,gCAAgC;IAChC,mEAAmE;IACnE,aAAa;IACb,kBAAkB;IAClB,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,kCAAkC;IAClC,kBAAkB;AACtB;;AAEA;IACI,kBAAkB;IAClB,YAAY;IACZ,aAAa;;AAEjB;;AAEA;IACI,aAAa;IACb,SAAS;;AAEb;AACA;IACI,YAAY;IACZ,mBAAmB;AACvB;;AAEA;IACI,mBAAmB;IACnB,uBAAuB;IACvB,oBAAoB;AACxB;;AAEA;IACI,2BAA2B;IAC3B,aAAa;IACb,2BAA2B;IAC3B,WAAW;AACf;;AAEA;IACI,sCAAsC;IACtC,sCAAsC;AAC1C;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI;AACJ;;;AAGA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,oBAAoB;CACvB;;;AAGD;IACI,aAAa;IACb,WAAW;IACX,uBAAuB;IACvB,YAAY;IACZ,SAAS;IACT,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,YAAY;IACZ,sBAAsB;IACtB,iCAAiC;IACjC,+BAA+B;IAC/B,+BAA+B;IAC/B,gCAAgC;IAChC,gCAAgC;IAChC,kBAAkB;;IAElB,aAAa;IACb,sCAAsC;IACtC,mCAAmC;AACvC;;;AAGA;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;;AAEvB;;AAEA;IACI,2BAA2B;IAC3B,aAAa;IACb,2BAA2B;IAC3B,WAAW;;AAEf;;AAEA;IACI,WAAW;IACX,mDAAqC;IACrC,2BAA2B;AAC/B;;AAEA;IACI,kCAAkC;AACtC;;AAEA;IACI,2BAA2B;AAC/B;;AAEA;IACI,4BAA4B;IAC5B,wDAAwD;;;AAG5D;;AAEA;IACI,sBAAsB;AAC1B;;;AAGA;IACI,aAAa;AACjB",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Mochiy+Pop+One&display=swap');\r\n\r\nhtml {\r\n    box-sizing: border-box;\r\n  }\r\n  \r\n*, *:before, *:after {\r\n    box-sizing: inherit;\r\n}\r\n  \r\nbody {\r\n    font-family: sans-serif;\r\n    margin: 0;\r\n    background-image: linear-gradient(260deg, #4e88ae 0%, #ca99d3 100%);\r\n}\r\n\r\nh1{\r\n    font-family: 'Mochiy Pop One', sans-serif;\r\n    font-size: 4rem;\r\n    text-align: center;\r\n    color: #fff;\r\n    text-transform: uppercase;\r\n    text-shadow: 5px 5px 6px #0000009e;\r\n}\r\n\r\nh2{\r\n    font-size: 1rem;\r\n    margin: 2rem;\r\n    font-weight: 500;\r\n    font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;\r\n}\r\n \r\nbutton{\r\n    color:white;\r\n    font-weight: 100;\r\n    letter-spacing: 2px;\r\n    text-decoration: none;\r\n    background:rgba(0,0,0,0.2);\r\n    padding:20px 35px;\r\n    border: none;\r\n    text-transform: uppercase;\r\n    font-weight: 600;\r\n    transition:all 0.2s;\r\n    cursor: pointer;\r\n    border-top: 3px solid #0000002c;\r\n    border-right: 3px solid #3a3a3a;\r\n    border-bottom: 3px solid #3a3a3a;\r\n    border-left: 3px solid #0000002c;\r\n    border-radius: 1px;\r\n}\r\n\r\nbutton:hover {\r\n    background:rgba(0,0,0,0.3);\r\n    border-top: 4px solid #0000002c;\r\n    border-right: 4px solid #3a3a3a;\r\n    border-bottom: 4px solid #3a3a3a;\r\n    border-left: 4px solid #0000002c;\r\n  }\r\n\r\n\r\n  svg{\r\n    color: #000;\r\n  }\r\n\r\n.overlay{\r\n    background-color: #00000066;\r\n    position: fixed;\r\n    width: 100%;\r\n    height: 100%;\r\n    top: 0;\r\n    bottom: 0;\r\n}\r\n\r\n.start-screen{\r\n    position: fixed;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    background-image: linear-gradient(260deg, #4e88ae 0%, #ca99d3 100%);\r\n    padding: 3rem;\r\n    border-radius: 4px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    box-shadow: 0px 0px 12px #000000a4;\r\n    text-align: center;\r\n}\r\n\r\n.start-screen #setup-board{\r\n    /* margin: 3rem; */\r\n    width: 220px;\r\n    height: 220px;\r\n    \r\n}\r\n\r\n.start-screen .button-container{\r\n    display: flex;\r\n    gap: 2rem;\r\n\r\n}\r\n.start-screen .button-container > button {\r\n    width: 135px;\r\n    padding: .7rem 2rem;\r\n}\r\n\r\n.start-screen .ships{\r\n    align-items: center;\r\n    justify-content: center;\r\n    display: inline-flex;\r\n}\r\n\r\n.ship-part{\r\n    background-color: #ffffffa3;\r\n    padding: 10px;\r\n    border: 1px solid #000000c1;\r\n    width: 10px;\r\n}\r\n\r\n.ship-part-on-board{\r\n    background-color: #ffffffa3 !important; \r\n    border: 1px solid #000000c1 !important;\r\n}\r\n\r\n.ships{\r\n    cursor: grab;\r\n}\r\n\r\n.dragging:active{\r\n    cursor: grabbing\r\n}\r\n\r\n\r\n.container{\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    padding-bottom: 3rem;\r\n } \r\n\r\n\r\n.board-container{\r\n    display: flex;\r\n    width: 100%;\r\n    justify-content: center;\r\n    padding:50px;\r\n    gap: 8rem;\r\n    flex-wrap: wrap;\r\n}\r\n\r\n.board{\r\n    height: 350px;\r\n    width: 350px;\r\n    border: 1px solid #000;\r\n    background-color: rgba(0,0,0,0.2);;\r\n    border-top: 3px solid #0000002c;\r\n    border-right: 3px solid #3a3a3a;\r\n    border-bottom: 3px solid #3a3a3a;\r\n    border-left: 3px solid #0000002c;\r\n    border-radius: 1px;\r\n\r\n    display: grid;\r\n    grid-template-columns: repeat(10, 1fr);\r\n    grid-template-rows: repeat(10, 1fr);\r\n}\r\n\r\n\r\n.created-by{\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n}\r\n\r\n.position{\r\n    background-color: #00000075;\r\n    padding: 10px;\r\n    border: 1px solid #ffffffae;\r\n    width: 100%;\r\n    \r\n}\r\n\r\n#board-cpu .position:hover{\r\n    color: #fff;\r\n    background: url('crosshairs-gps.svg');\r\n    background-color: #ffffff75;\r\n}\r\n\r\n.position.there-is-ship{\r\n    background-color: rgb(69, 179, 69);\r\n}\r\n\r\n.position.miss{\r\n    background-color: #72727247;\r\n}\r\n\r\n.position.hit{\r\n    background: rgb(194, 37, 37);\r\n    box-shadow:inset 0px 0px 0px 5px rgba(33, 33, 33, 0.792);\r\n    \r\n\r\n}\r\n\r\n.col {\r\n    flex-direction: column;\r\n}\r\n\r\n\r\n.hide {\r\n    display: none;\r\n}"],sourceRoot:""}]);const p=d},645:r=>{"use strict";r.exports=function(r){var n=[];return n.toString=function(){return this.map((function(n){var e="",t=void 0!==n[5];return n[4]&&(e+="@supports (".concat(n[4],") {")),n[2]&&(e+="@media ".concat(n[2]," {")),t&&(e+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),e+=r(n),t&&(e+="}"),n[2]&&(e+="}"),n[4]&&(e+="}"),e})).join("")},n.i=function(r,e,t,o,a){"string"==typeof r&&(r=[[null,r,void 0]]);var i={};if(t)for(var s=0;s<this.length;s++){var A=this[s][0];null!=A&&(i[A]=!0)}for(var c=0;c<r.length;c++){var d=[].concat(r[c]);t&&i[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),e&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=e):d[2]=e),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),n.push(d))}},n}},667:r=>{"use strict";r.exports=function(r,n){return n||(n={}),r?(r=String(r.__esModule?r.default:r),/^['"].*['"]$/.test(r)&&(r=r.slice(1,-1)),n.hash&&(r+=n.hash),/["'() \t\n]|(%20)/.test(r)||n.needQuotes?'"'.concat(r.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):r):r}},537:r=>{"use strict";r.exports=function(r){var n=r[1],e=r[3];if(!e)return n;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),a="/*# ".concat(o," */");return[n].concat([a]).join("\n")}return[n].join("\n")}},379:r=>{"use strict";var n=[];function e(r){for(var e=-1,t=0;t<n.length;t++)if(n[t].identifier===r){e=t;break}return e}function t(r,t){for(var a={},i=[],s=0;s<r.length;s++){var A=r[s],c=t.base?A[0]+t.base:A[0],d=a[c]||0,l="".concat(c," ").concat(d);a[c]=d+1;var p=e(l),u={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==p)n[p].references++,n[p].updater(u);else{var f=o(u,t);t.byIndex=s,n.splice(s,0,{identifier:l,updater:f,references:1})}i.push(l)}return i}function o(r,n){var e=n.domAPI(n);return e.update(r),function(n){if(n){if(n.css===r.css&&n.media===r.media&&n.sourceMap===r.sourceMap&&n.supports===r.supports&&n.layer===r.layer)return;e.update(r=n)}else e.remove()}}r.exports=function(r,o){var a=t(r=r||[],o=o||{});return function(r){r=r||[];for(var i=0;i<a.length;i++){var s=e(a[i]);n[s].references--}for(var A=t(r,o),c=0;c<a.length;c++){var d=e(a[c]);0===n[d].references&&(n[d].updater(),n.splice(d,1))}a=A}}},569:r=>{"use strict";var n={};r.exports=function(r,e){var t=function(r){if(void 0===n[r]){var e=document.querySelector(r);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(r){e=null}n[r]=e}return n[r]}(r);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(e)}},216:r=>{"use strict";r.exports=function(r){var n=document.createElement("style");return r.setAttributes(n,r.attributes),r.insert(n,r.options),n}},565:(r,n,e)=>{"use strict";r.exports=function(r){var n=e.nc;n&&r.setAttribute("nonce",n)}},795:r=>{"use strict";r.exports=function(r){var n=r.insertStyleElement(r);return{update:function(e){!function(r,n,e){var t="";e.supports&&(t+="@supports (".concat(e.supports,") {")),e.media&&(t+="@media ".concat(e.media," {"));var o=void 0!==e.layer;o&&(t+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),t+=e.css,o&&(t+="}"),e.media&&(t+="}"),e.supports&&(t+="}");var a=e.sourceMap;a&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(t,r,n.options)}(n,r,e)},remove:function(){!function(r){if(null===r.parentNode)return!1;r.parentNode.removeChild(r)}(n)}}}},589:r=>{"use strict";r.exports=function(r,n){if(n.styleSheet)n.styleSheet.cssText=r;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(r))}}},642:(r,n,e)=>{"use strict";e.r(n),e.d(n,{boardCPUDOM:()=>d,boardCoordinate:()=>I,boardPlayerDOM:()=>c,createBoard:()=>C,createSetupBoard:()=>m,displayDragShips:()=>b,gameWonBy:()=>y,leftBoardAttack:()=>x});var t=e(417);const o=document.getElementById("start-game"),a=document.querySelector(".random-btn"),i=document.querySelector(".start-btn"),s=document.querySelector(".start-screen"),A=document.querySelector(".overlay"),c=document.getElementById("board-player"),d=document.getElementById("board-cpu"),l=document.getElementById("setup-board"),p=document.querySelector(".ships"),u=[c,d];let f,g,h=[5,4,3,2,1];o.addEventListener("click",(()=>{s.classList.remove("hide"),A.classList.remove("hide"),(0,t.wo)()})),i.addEventListener("click",(()=>{s.classList.add("hide"),A.classList.add("hide"),(0,t.t)()})),a.addEventListener("click",(()=>{(0,t.KY)()})),l.addEventListener("dragover",(r=>{r.preventDefault()})),l.addEventListener("dragleave",(r=>{r.preventDefault()})),p.addEventListener("dragend",(()=>{if(console.log((0,t.bf)()),null!=f){let[r,n]=f.split("-");r=parseInt(r),n=parseInt(n),g=p.classList.contains("col")?"h":"v",console.log(g),(0,t.bf)(r,n,g,h[0])&&((0,t.ZW)(r,n,g,h[0]),h.shift(),b())}})),l.addEventListener("dragenter",(r=>{r.target.classList.contains("ship-part-on-board")?(f=null,g=null):(f=r.target.dataset.coords,g=r.target.classList)})),p.addEventListener("dragstart",(r=>{r.target.classList.add("dragging"),console.log("you picked me up!")})),p.addEventListener("mouseup",(()=>{p.classList.toggle("col")}));const b=()=>{p.innerHTML="";for(let r=0;r<h[0];r++){let r=document.createElement("div");r.classList.add("ship-part"),p.appendChild(r)}},m=r=>{l.innerHTML="",r.forEach(((r,n)=>{r.forEach(((r,e)=>{let t=document.createElement("div");t.classList.add("position"),!0===r&&t.classList.add("ship-part-on-board"),t.setAttribute("data-coords",`${n}-${e}`),l.appendChild(t)}))}))},C=r=>{u.forEach(((n,e)=>{n.innerHTML="",console.log(r),r[e].forEach(((r,t)=>{r.forEach(((r,o)=>{let a=document.createElement("div");a.classList.add("position"),0===e&&!0===r&&a.classList.add("there-is-ship"),a.setAttribute("data-coords",`${t}-${o}`),n.appendChild(a)}))}))}))};let B=document.querySelectorAll("#board-cpu .position");const I=r=>{B=document.querySelectorAll("#board-cpu .position"),B.forEach((r=>{r.addEventListener("click",(()=>(r=>{let n=r.dataset.coords.split("-");r.classList.contains("hit")||r.classList.contains("miss")||("hit"===(0,t.ug)(n)?r.classList.add("hit"):r.classList.add("miss"),(0,t.V)())})(r)))}))},x=(r,n,e)=>{const t=[...document.querySelectorAll("#board-player .position")].find((r=>r.dataset.coords===`${n}-${e}`));"hit"===r?t.classList.add("hit"):t.classList.add("miss")},y=r=>{alert(`${r} won the game`)}},417:(r,n,e)=>{"use strict";e.d(n,{KY:()=>m,V:()=>B,ZW:()=>h,bf:()=>b,t:()=>C,ug:()=>x,wo:()=>g});const{createBoard:t,boardCoordinate:o,leftBoardAttack:a,gameWonBy:i,createSetupBoard:s,displayDragShips:A}=e(642),c=e(498),d=e(507);let l=!1;const p=c(),u=c(),f=(d(u),d(p));A(),s(p.board);const g=()=>{const r=c(),n=c();d(n),d(r),A(),s(r.board)},h=(r,n,e,t)=>{p.placeShip(r,n,e,t),s(p.board)},b=(r,n,e,t)=>(console.log(p.board),!!p.checkBoard(r,n,e,t)),m=()=>{p.boardReset(),p.randomShips(),s(p.board)},C=()=>{u.randomShips(),t([p.board,u.board]),o(u)},B=()=>{!0===u.allSunk()?(console.log("Player won"),i("You"),l=!0):!0===p.allSunk()&&(console.log("CPU won"),i("Computer"),l=!0),I()},I=()=>{if(!l){let{result:r,x:n,y:e}=f.attack();a(r,n,e)}},x=r=>{let[n,e]=r;return u.receiveAttack(n,e)}},498:(r,n,e)=>{const t=e(643);r.exports=()=>{const r=[],n=(()=>{const r=[];for(let n=0;n<10;n++){const n=[];r.push(n);for(let r=0;r<10;r++)n.push(!1)}return r})();function e(e,a,i,s){const A=t(s);if(o(e,a,i,s)){if("h"===i)for(let r=e;r<e+s;r++)n[r][a]=!0,A.coords.push([r,a]);else{if("v"!==i)return!1;for(let r=a;r<a+s;r++)n[e][r]=!0,A.coords.push([e,r])}r.push(A)}return this}const o=(r,e,t,o)=>{if("empty"===r){for(let r=0;r<=9;r++)for(let e=0;e<=9;e++)if(0==!n[r][e])return!1;return!0}if(!((r,n,e,t)=>!("h"===e&&r+t>10||"v"===e&&n+t>10))(r,e,t,o))return!1;if(!((r,e,t,o)=>{if("h"===t){for(let t=r;t<r+o;t++)if(!0===n[t][e])return!1}else if("v"===t)for(let t=e;t<e+o;t++)if(!0===n[r][t])return!1;return!0})(r,e,t,o))return!1;if("h"===t){for(let t=r;t<r+o;t++)n[t][e];return!0}if("v"===t)for(let t=e;t<e+o;t++)n[r][t];return!0};return{allSunk:function(){let n=!0;return r.forEach((r=>{!1===r.isSunk()&&(n=!1)})),n},board:n,boardReset:function(){for(let r=0;r<10;r++)for(let e=0;e<10;e++)n[r][e]=!1},checkBoard:o,placeShip:e,receiveAttack:function(e,t){return!0===n[e][t]?(r.forEach((r=>{r.coords.forEach((n=>{n[0]==e&&n[1]==t&&r.hit()}))})),n[e][t]="hit","hit"):!1===n[e][t]?(n[e][t]="miss","miss"):void 0},randomShips:function(){let r,n,t;const a=["h","v"],i=[1,2,3,4,5];for(let s=0;s<i.length;s++){do{r=Math.floor(10*Math.random()),n=Math.floor(10*Math.random()),t=Math.floor(2*Math.random())}while(!o(r,n,a[t],i[s]));e(r,n,a[t],i[s])}}}}},507:r=>{r.exports=r=>{const n=(()=>{const r=[];for(let n=0;n<10;n++)for(let e=0;e<10;e++)r.push([n,e]);return r})();let e,t,o;return{attacksAvailable:()=>n.length,attack:(a=(()=>{if("hit"===e){const r=[];t>0&&r.push([t-1,o]),t<9&&r.push([t+1,o]),o>0&&r.push([t,o-1]),o<9&&r.push([t,o+1]);const e=r.filter((r=>{const[e,t]=r;return n.some((r=>r[0]===e&&r[1]===t))}));if(e.length>0){const[r,t]=e[Math.floor(Math.random()*e.length)];return n.findIndex((n=>n[0]===r&&n[1]===t))}}return Math.floor(Math.random()*n.length)})())=>([t,o]=n.splice(a,1)[0],e=r.receiveAttack(t,o),{result:e,x:t,y:o})}}},643:r=>{r.exports=r=>{let n=!1;return{timesHit:0,sunk:n,shipLength:r,hit:function(){return this.timesHit++,this},isSunk:function(){return r===this.timesHit&&(n=!0,!0)},coords:[]}}},843:(r,n,e)=>{"use strict";r.exports=e.p+"789235ac09c9e337b730.svg"}},n={};function e(t){var o=n[t];if(void 0!==o)return o.exports;var a=n[t]={id:t,exports:{}};return r[t](a,a.exports,e),a.exports}e.m=r,e.n=r=>{var n=r&&r.__esModule?()=>r.default:()=>r;return e.d(n,{a:n}),n},e.d=(r,n)=>{for(var t in n)e.o(n,t)&&!e.o(r,t)&&Object.defineProperty(r,t,{enumerable:!0,get:n[t]})},e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(r){if("object"==typeof window)return window}}(),e.o=(r,n)=>Object.prototype.hasOwnProperty.call(r,n),e.r=r=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(r,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(r,"__esModule",{value:!0})},(()=>{var r;e.g.importScripts&&(r=e.g.location+"");var n=e.g.document;if(!r&&n&&(n.currentScript&&(r=n.currentScript.src),!r)){var t=n.getElementsByTagName("script");t.length&&(r=t[t.length-1].src)}if(!r)throw new Error("Automatic publicPath is not supported in this browser");r=r.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=r})(),e.b=document.baseURI||self.location.href,e.nc=void 0,(()=>{"use strict";e(417);var r=e(379),n=e.n(r),t=e(795),o=e.n(t),a=e(569),i=e.n(a),s=e(565),A=e.n(s),c=e(216),d=e.n(c),l=e(589),p=e.n(l),u=e(426),f={};f.styleTagTransform=p(),f.setAttributes=A(),f.insert=i().bind(null,"head"),f.domAPI=o(),f.insertStyleElement=d(),n()(u.Z,f),u.Z&&u.Z.locals&&u.Z.locals})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,